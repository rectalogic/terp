name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup update stable
          VERSION=$(cargo metadata --format-version 1 --no-deps | jq --raw-output '.packages | map(select(.name == "terp")) | .[0].version')
          # Fail if tag does not match cargo package version
          [ v"$VERSION" == "${{ github.ref_name }}" ] || exit 1
      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get update && sudo apt-get install g++ pkg-config libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: terp
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
